{"version":3,"sources":["api/getAPI.js","redux/actions/actions.types.js","redux/actions/actions.js","skeletons/SkeletonBase/SkeletonBase.jsx","skeletons/SkeletonCryptoListRow/SkeletonCryptoListRow.jsx","pages/CryptoList/CryptoList.jsx","pages/Details/Details.jsx","routes/Routes.jsx","components/NavigationBar/NavigationBar.jsx","components/Charts/Charts.jsx","components/CryptoListRow/CryptoListRow.jsx","components/Loader/Loader.jsx","components/Search/Search.jsx","redux/reducers/cryptoDataReducer.js","redux/reducers/index.js","redux/store/store.js","App.js","index.js"],"names":["getAPI","webApiUrl","a","fetch","then","res","json","request","ACTION_TYPES","FETCH_CRYPTO_LIST_DATA","FETCH_CRYPTO_HISTORICAL_DATA","SET_CURRENTLY_SELECTED_COIN","SET_SEARCH_CRYPTO_LIST_VALUE","api","fetchCryptoListData","start","dispatch","status","type","payload","cryptoList","data","isCryptoListLoading","nextCryptoListPage","catch","err","console","log","SkeletonBase","className","SkeletonCryptoList","SkeletonCryptoListRow","times","card","i","push","CryptoList","useDispatch","nextCryptoPage","useSelector","state","cryptoDataReducer","searchValue","currentlySelectedSearchCryptoListValue","cryptoData","React","useState","localCryptoDataState","setLocalCryptoDataState","priceSortToggle","setPriceSortToggle","loading","setLoading","tableRef","useRef","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","useEffect","filter","options","name","toLowerCase","includes","addEventListener","removeEventListener","sort","e","dataKey","sortedData","b","NotFound","colSpan","ref","scope","onClick","length","map","crypto","index","Details","history","useHistory","chartJSHistoricalDatas","historicalDatas","currentlySelectedCoin","chartData","setChartData","getCurrecyFormat","value","nfObject","Intl","NumberFormat","format","cryptoFound","symbol","today","Date","previous","getFullYear","getMonth","getDate","end","encodeURIComponent","toISOString","historicalData","labels","datasets","label","backgroundColor","borderColor","fill","routes","home","src","logo_url","alt","parseFloat","high","toFixed","rank","num_exchanges","market_cap","price","Number","price_change_pct","details","contactUs","search","Routes","location","useLocation","exact","from","to","pathname","isValid","Object","keys","forEach","routeKey","isRouteValid","component","path","NavigationBar","id","Charts","tooltips","intersect","interaction","responsive","maintainAspectRatio","CryptoListRow","getClassName","Loader","currentValue","setCurrentValue","setTimeout","style","height","role","width","Search","placeholder","onChange","target","initialState","combineReducers","_state","store","createStore","rootReducer","compose","applyMiddleware","thunk","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.481946ff.chunk.js","sourcesContent":["const getAPI = async (webApiUrl) => {\n    try {\n        const request = await fetch(webApiUrl).then(res => res.json());\n        return request;\n    } catch (err) {\n        return err;\n    }\n};\n\nexport default getAPI;","const ACTION_TYPES = {\n    FETCH_CRYPTO_LIST_DATA: 'FETCH_CRYPTO_LIST_DATA',\n    FETCH_CRYPTO_HISTORICAL_DATA: 'FETCH_CRYPTO_HISTORICAL_DATA',\n    SET_CURRENTLY_SELECTED_COIN: 'SET_CURRENTLY_SELECTED_COIN',\n    SET_SEARCH_CRYPTO_LIST_VALUE: 'SET_SEARCH_CRYPTO_LIST_VALUE'\n};\nexport default ACTION_TYPES;","import getAPI from '../../api/getAPI'\nimport ACTION_TYPES from './actions.types'\n\nlet api = 'http://localhost:5000';\nexport const fetchCryptoListData = (start) => {\n    const entriesLength = 20;\n    return (dispatch) => {\n        getAPI(`${api}/get_cryto_list/${start}/${entriesLength}`).then(res => {\n            if (res.status === 500) {\n                dispatch({\n                    type: ACTION_TYPES.FETCH_CRYPTO_LIST_DATA,\n                    payload: {\n                        cryptoList: [],\n                        isCryptoListLoading: false,\n                        nextCryptoListPage: start\n                    }\n                })\n                return;\n            }\n            dispatch({\n                type: ACTION_TYPES.FETCH_CRYPTO_LIST_DATA,\n                payload: {\n                    cryptoList: res.data,\n                    isCryptoListLoading: false,\n                    nextCryptoListPage: start + 1\n                }\n            })\n        }).catch(err => {\n            console.log(err);\n        })\n    };\n}\n\nexport const fetchCryptoHistoricalData = (symbol, start, end) => {\n    return (dispatch) => {\n        getAPI(`${api}/get_historical_data/${symbol}/${encodeURIComponent(start.toISOString())}/${encodeURIComponent(end.toISOString())}`).then(res => {\n            dispatch({\n                type: ACTION_TYPES.FETCH_CRYPTO_HISTORICAL_DATA,\n                payload: {\n                    historicalData: { symbol, data: {\n                        labels: res.data.labels,\n                        datasets: [\n                            {\n                                label: \"Price\",\n                                data: res.data.data,\n                                backgroundColor: \"#277fe338\",\n                                borderColor: \"#2780e3\",\n                                fill: true\n                            }\n                        ]\n                    }}\n                }\n            })\n        }).catch(err => {\n            console.log(err);\n        })\n    };\n};\n\nexport const setSearchCryptoListValue = (currentlySelectedSearchCryptoListValue) => {\n    return {\n        type: ACTION_TYPES.SET_SEARCH_CRYPTO_LIST_VALUE,\n        payload: {\n            currentlySelectedSearchCryptoListValue\n        }\n    }\n}\n\nexport const setCurrentlySelectedCoin = (currentlySelectedCoin) => {\n    return {\n        type: ACTION_TYPES.SET_CURRENTLY_SELECTED_COIN,\n        payload: {\n            currentlySelectedCoin\n        }\n    }\n};","import React from 'react';\nimport './SkeletonBase.css';\n\nconst SkeletonBase = ({ type }) => {\n    return <div className={`skeleton ${type}`}></div>\n};\n\nexport default SkeletonBase;","import React from 'react';\nimport SkeletonBase from '../SkeletonBase/SkeletonBase';\n\nconst SkeletonCryptoList = () => {\n    return (\n        <tr>\n            <td className='align-cell-center'>\n                <SkeletonBase type='sub-title center'/>\n            </td>\n            <td className={`align-cell-left`}><SkeletonBase type='avatar' /><SkeletonBase type='sub-title' /></td>\n            <th><SkeletonBase type='sub-title' /></th>\n            <th className={`align-cell-center`}>\n                <SkeletonBase type='sub-title center' />\n            </th>\n            <th className={`align-cell-center`}>\n                <SkeletonBase type='sub-title center' />\n            </th>\n            <td className='align-cell-right'>\n                <SkeletonBase type='sub-title right' />\n            </td>\n            <td className='align-cell-right'>\n                <SkeletonBase type='sub-title right' />\n            </td>\n            <td className='align-cell-right'>\n                <SkeletonBase type='sub-title right' />\n            </td>\n        </tr>\n    )\n};\n\nconst SkeletonCryptoListRow = ({times = 20}) => {\n    let card = [];\n    for (let i = 0; i < times; i++) {\n        card.push(<SkeletonCryptoList key={i}/>)\n    }\n    return card\n}\n\nexport default SkeletonCryptoListRow;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport './CryptoList.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CryptoListRow, Search } from '../../components';\nimport { fetchCryptoListData } from '../../redux/actions/actions';\nimport { SkeletonCryptoListRow } from '../../skeletons';\n\nconst CryptoList = () => {\n    const dispatch = useDispatch();\n    const nextCryptoPage = useSelector((state) => state.cryptoDataReducer.nextCryptoListPage);\n    const searchValue = useSelector(state => state.cryptoDataReducer.currentlySelectedSearchCryptoListValue);\n    const cryptoData = useSelector((state) => state.cryptoDataReducer.cryptoList);\n    const [localCryptoDataState, setLocalCryptoDataState] = React.useState(null);\n    const [priceSortToggle, setPriceSortToggle] = React.useState(1);\n    const [loading, setLoading] = React.useState(false);\n    const tableRef = React.useRef(null);\n\n    const handleScroll = () => {\n        if (window.innerHeight + document.documentElement.scrollTop < document.documentElement.offsetHeight - 5) return;\n        if (!loading) {\n            dispatch(fetchCryptoListData(nextCryptoPage, 20));\n            setLoading(true);\n        }\n    };\n\n    React.useEffect(() => {\n        if (cryptoData) {\n            if (searchValue !== '') setLocalCryptoDataState(cryptoData.filter(options => options.name.toLowerCase().includes(searchValue.toLowerCase())));\n            if (searchValue === '') setLocalCryptoDataState(cryptoData);\n            setLoading(false);\n        }\n    }, [cryptoData, searchValue]);\n\n    React.useEffect(() => {\n        window.addEventListener('scroll', handleScroll);\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, [nextCryptoPage, localCryptoDataState, loading]);\n\n    React.useEffect(() => {\n        if (!localCryptoDataState) {\n            setLoading(true);\n            dispatch(fetchCryptoListData(1, 20));\n        }\n    }, [localCryptoDataState]);\n\n    const fetchMore = () => {\n        setLoading(true);\n        dispatch(fetchCryptoListData(nextCryptoPage, 20));\n    };\n\n    const sort = (e, dataKey) => {\n        let sortedData = localCryptoDataState;\n        sortedData.sort((a, b) => {\n            return priceSortToggle * (a[dataKey] - b[dataKey]);\n        });\n        setPriceSortToggle(-1 * priceSortToggle);\n        setLoading(true);\n        setLocalCryptoDataState(sortedData)\n    };\n\n    const renderCryptoData = () => {\n        if (localCryptoDataState.length) {\n            return localCryptoDataState.map((crypto, index) => {\n                return <CryptoListRow crypto={crypto} key={`crypto-currency-${index}`} />\n            });\n        } else {\n            return null;\n        }\n    };\n\n    const NotFound = () => {\n        return (\n            <tr className='error-row'>\n                <td colSpan='8' className='align-cell-center'>Could not find what you're searching for</td>\n            </tr>\n        )\n    };\n\n    return (\n        <div className=\"section container-fluid\">\n            <div className=\"row justify-content-center align-items-center\">\n                <div className=\"col-md-12\">\n                    <div className=\"container\">\n                        <Search />\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-12\">\n                    <div className=\"container\">\n                        {/* <div className=\"row justify-content-end align-items-center\">\n                            <span className=\"form-check form-switch\">\n                                <input className=\"form-check-input\" type=\"checkbox\" />\n                                <label className=\"form-check-label ml-1\">\n                                    Only include currenceries with graph\n                                </label>\n                            </span>\n                        </div> */}\n                        <div className='table-responsive'> \n                            <table className=\"table table-hover\" ref={tableRef}>\n                                <thead>\n                                    <tr>\n                                        <th className='align-cell-center table-heading' scope=\"col\"><div className='btn rank-sort' onClick={(e) => sort(e, 'rank')}>#</div></th>\n                                        <th className='table-heading' scope=\"col\">COIN</th>\n                                        <th className='table-heading' scope=\"col\"></th>\n                                        <th className='align-cell-center table-heading' scope=\"col\">1D</th>\n                                        <th className='align-cell-center table-heading' scope=\"col\">30D</th>\n                                        <th className='align-cell-right table-heading' scope=\"col\" onClick={(e) => sort(e, 'market_cap')}><i className='fa fa-sort mr-1'></i>MARKET CAP</th>\n                                        <th className='align-cell-right table-heading' scope=\"col\">24H VOLUME</th>\n                                        <th className='align-cell-right table-heading' scope=\"col\" onClick={(e) => sort(e, 'price')}><i className='fa fa-sort mr-1'></i>PRICE</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {localCryptoDataState && renderCryptoData()}\n                                    {(loading) && <SkeletonCryptoListRow times={5} />}\n                                    {!loading && localCryptoDataState && !localCryptoDataState.length && <NotFound />}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {localCryptoDataState && localCryptoDataState.length < 10 && <div className=\"row justify-content-center align-items-center\">\n                <div className=\"col-md-12 text-center\">\n                    <button className=\"btn btn-primary\" onClick={fetchMore}>Fetch More</button>\n                </div>\n            </div>}\n        </div>\n    )\n};\n\nexport default CryptoList;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport './Details.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Charts, Loader } from '../../components';\nimport { fetchCryptoHistoricalData } from '../../redux/actions/actions';\nimport { useHistory } from 'react-router-dom';\nimport { routes } from '../../routes/Routes';\n\nconst Details = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const chartJSHistoricalDatas = useSelector(state => state.cryptoDataReducer.historicalDatas);\n    const currentlySelectedCoin = useSelector(state => state.cryptoDataReducer.currentlySelectedCoin);\n    const [chartData, setChartData] = React.useState(null);\n\n    const getCurrecyFormat = (value) => {\n        const nfObject = new Intl.NumberFormat('en-US');\n        return `$${nfObject.format(value)}`;\n    }\n    const getClassName = (value) => {\n        if (value > 0) return 'bg-success';\n        else return 'bg-danger'\n    }\n\n    React.useEffect(() => {\n        if (currentlySelectedCoin) {\n            const cryptoFound = chartJSHistoricalDatas.filter((crypto) => crypto.symbol === currentlySelectedCoin.symbol)\n            if (cryptoFound.length) {\n                setChartData(cryptoFound[0].data);\n            } else {\n                const today = new Date();\n                const previous = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 30);\n                dispatch(fetchCryptoHistoricalData(currentlySelectedCoin.symbol, previous, today));\n            }\n        } else if (history) {\n            history.push(routes.home);\n        }\n    }, [currentlySelectedCoin, chartJSHistoricalDatas]);\n\n    const renderChartData = () => {\n        if (!chartData) {\n            return <div className='chart-loader'><Loader /></div>\n        } else {\n            if (chartData.labels.length) {\n                return <div className=\"charts-wrapper\">\n                    <Charts data={chartData} />\n                </div>;\n            } else {\n                return <div className=\"container\" >\n                    <div className=\"row\">\n                        <div className=\"col-12 text-center text-danger\">\n                            <h4>No Chart Data Available</h4>\n                        </div>\n                    </div>\n                </div>;\n            }\n        }\n    }\n\n    return (\n        <div className='container section crypto-details'>\n            <div className=\"row align-items-center\">\n                <div className=\"col-md-9 col-sm-12\">\n                    {currentlySelectedCoin && <div className=\"d-flex crypto-ids mb-3 mt-3\">\n                        <img className='coin-main-logo mr-1' src={currentlySelectedCoin.logo_url} alt={'img'} />\n                        <h1 className='details-name mr-1'>{currentlySelectedCoin.name}</h1>\n                        <div className=\"badge bg-light\">{currentlySelectedCoin.symbol}</div>\n                    </div>}\n                    <hr className='hide-mobile'/>\n                    {currentlySelectedCoin && <div className=\"d-flex justify-content-start align-items-center badges pt-2 pb-2 hide-mobile\">\n                        <div className=\"badge bg-dark mr-1 mt-1\">HIGH: {getCurrecyFormat(parseFloat(currentlySelectedCoin.high).toFixed(2))}</div>\n                        <div className=\"badge bg-dark mr-1 mt-1\">RANK: #{currentlySelectedCoin.rank}</div>\n                        <div className=\"badge bg-dark mr-1 mt-1\">NO. EXCHANGES: #{currentlySelectedCoin.num_exchanges}</div>\n                        <div className=\"badge bg-dark mt-1\">MARKET CAP: {getCurrecyFormat(parseFloat(currentlySelectedCoin.market_cap).toFixed(2))}</div>\n                    </div>}\n                </div>\n                <hr className='d-only-sm'/>\n                <div className=\"col-md-3 col-sm-12 mobile-price-view\">\n                    <div className=\"d-flex align-items-center price-heading\">\n                        <div className=\"badge bg-light\">\n                            LTP\n                        </div>\n                    </div>\n                    {currentlySelectedCoin && <div className=\"d-flex align-items-center price-margins\">\n                        <h1 className='details-name mr-1'>{getCurrecyFormat(parseFloat(currentlySelectedCoin.price).toFixed(2))}</h1>\n                        <span className={`badge ${getClassName(Number(currentlySelectedCoin['1d'].price_change_pct))}`}>{Number(currentlySelectedCoin['1d'].price_change_pct).toFixed(2)}%</span>\n                    </div>}\n                </div>\n                <hr className='hide-laptop'/>\n                {currentlySelectedCoin && <div className=\"d-flex justify-content-start align-items-center badges pt-2 pb-2 hide-laptop\">\n                    <div className=\"badge bg-dark mr-1 mt-1\">HIGH: {getCurrecyFormat(parseFloat(currentlySelectedCoin.high).toFixed(2))}</div>\n                    <div className=\"badge bg-dark mr-1 mt-1\">RANK: #{currentlySelectedCoin.rank}</div>\n                    <div className=\"badge bg-dark mr-1 mt-1\">NO. EXCHANGES: #{currentlySelectedCoin.num_exchanges}</div>\n                    <div className=\"badge bg-dark mt-1\">MARKET CAP: {getCurrecyFormat(parseFloat(currentlySelectedCoin.market_cap).toFixed(2))}</div>\n                </div>}\n            </div>\n            <hr className='mb-3 mt-1' />\n            <div className=\"row mt-5 align-items-center\">\n                <div className=\"col-md-12\">\n                    {renderChartData()}\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Details;","import React from 'react';\nimport { Redirect, Switch, Route, useLocation } from 'react-router-dom';\nimport {\n  CryptoList,\n  Details\n} from '../pages';\n\nexport const routes = {\n  home: '/',\n  cryptoList: '/market',\n  details: '/details',\n  contactUs: '/contact-us',\n  search: '/search'\n};\n\nconst Routes = () => {\n  const location = useLocation();\n  const isRouteValid = (pathname) => {\n    let isValid = false;\n    Object.keys(routes).forEach((routeKey) => {\n      if (routes[routeKey] === pathname) isValid = true;\n    });\n    return isValid;\n  };\n  return (\n    <Switch>\n      <Redirect exact from={routes.home} to={routes.cryptoList} />\n      {isRouteValid(location.pathname) ? (\n        <>\n          <Route exact component={CryptoList} path={routes.cryptoList} />\n          <Route exact component={Details} path={`${routes.details}`} />\n          <Route exact component={CryptoList} path={routes.search} />\n          <Route exact component={CryptoList} path={routes.contactUs} />\n        </>\n      ) : (\n        <Redirect to={routes.home} />\n      )}\n    </Switch>\n  );\n};\n\nexport default Routes;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { routes } from '../../routes/Routes';\nimport './NavigationBar.css';\n\nconst NavigationBar = () => {\n  const location = useLocation();\n  return (\n    <nav className='navbar navbar-expand-lg navbar-dark'>\n      <div className='container-fluid'>\n        <Link\n          className='navbar-brand'\n          to={{\n            pathname: routes.home,\n          }}\n        >\n          Cryptokit.\n        </Link>\n\n        <button\n          className='navbar-toggler'\n          type='button'\n          data-toggle='collapse'\n          data-target='#navbarColor01'\n          aria-controls='navbarColor01'\n          aria-expanded='false'\n          aria-label='Toggle navigation'\n        >\n          <i className=\"fa fa-chevron-circle-down fa-2x menu-icon\"></i>\n        </button>\n\n        <div className='collapse navbar-collapse' id='navbarColor01'>\n          <ul className='navbar-nav mx-auto'>\n            <li className='nav-item'>\n              <Link\n                className={`nav-link ${\n                  location.pathname === routes.home ||\n                  location.pathname === routes.cryptoList\n                    ? 'active'\n                    : ''\n                }`}\n                to={{\n                  pathname: routes.cryptoList,\n                }}\n              >\n                MARKET\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link\n                className={`nav-link ${\n                  location.pathname === routes.search ? 'active' : ''\n                }`}\n                to={{\n                  pathname: routes.search,\n                }}\n              >\n                SEARCH\n              </Link>\n            </li>\n            <Link\n              className={`nav-link ${\n                location.pathname === routes.contactUs ? 'active' : ''\n              }`}\n              to={{\n                pathname: routes.contactUs,\n              }}\n            >\n              CONTACT US\n            </Link>\n          </ul>\n          <div className='d-flex'>\n            <button className='btn btn-primary my-2 my-sm-0' type='submit'>\n              Buy Now\n            </button>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavigationBar;\n","import React from 'react';\nimport { Line } from \"react-chartjs-2\";\n\n\nconst Charts = ({ data }) => {\n    const opts = {\n        type: 'line',\n        tooltips: {\n            intersect: false\n        },\n        interaction: {\n            intersect: false\n        },\n        responsive: true,\n        maintainAspectRatio: true\n    };\n    return <Line data={data} options={opts} />;\n};\n\nexport default Charts;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setCurrentlySelectedCoin } from '../../redux/actions/actions';\nimport { routes } from '../../routes/Routes';\n\nconst CryptoListRow = ({ crypto }) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const getCurrecyFormat = (value) => {\n        const nfObject = new Intl.NumberFormat('en-US');\n        return `$${nfObject.format(value)}`;\n    }\n    const getClassName = (value) => {\n        if (value > 0) return 'text-success';\n        else return 'text-danger'\n    }\n    const showCryptoDetails = () => {\n        dispatch(setCurrentlySelectedCoin(crypto));\n        history.push(routes.details);\n    };\n\n    return (\n        <tr onClick={showCryptoDetails}>\n            <td className='align-cell-center'>\n                {crypto.rank}\n            </td>\n            <td className='align-cell-left mobile-crypto-name'><img className='coin-logo mr-2' src={crypto.logo_url} alt={'img'}/>{crypto.name}</td>\n            <th>{crypto.symbol}</th>\n            <th className={`align-cell-center ${getClassName(Number(crypto['1d'].price_change_pct))}`}>\n                {Number(crypto['1d'].price_change_pct).toFixed(2)}%\n            </th>\n            <th className={`align-cell-center ${getClassName(Number(crypto['1d'].price_change_pct))}`}>\n                {Number(crypto['30d'].price_change_pct).toFixed(1)}%\n            </th>\n            <td className='align-cell-right'>{getCurrecyFormat(Number(crypto.market_cap).toFixed(0))}</td>\n            <td className='align-cell-right'>{getCurrecyFormat(Number(crypto['1d']['volume']).toFixed(0))}</td>\n            <td className='align-cell-right'>{getCurrecyFormat(Number(crypto.price).toFixed(2))}</td>\n        </tr>\n    )\n};\n\nexport default CryptoListRow;","import React from 'react';\n\nconst Loader = () => {\n    const [currentValue, setCurrentValue] = React.useState(30);\n    React.useEffect(() => {\n        if (currentValue && currentValue < 85) {\n            setTimeout(() => {\n                setCurrentValue(currentValue + 1)\n            }, [10]);\n        }\n    }, [currentValue]);\n    return (\n        <div className=\"progress\" style={{ height: `40px` }}>\n            <div className=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\" aria-valuenow={currentValue} aria-valuemin=\"0\" aria-valuemax=\"100\" style={{ width: `${currentValue}%` }}></div>\n        </div>\n    )\n};\n\nexport default Loader;","import React from 'react';\nimport './Search.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSearchCryptoListValue } from '../../redux/actions/actions';\n\nconst Search = () => {\n    const dispatch = useDispatch();\n    const searchValue = useSelector(state => state.cryptoDataReducer.currentlySelectedSearchCryptoListValue);\n    const handleChange = e => {\n        dispatch(setSearchCryptoListValue(e.target.value));\n    }\n    return (\n        <div className=\"form-group has-success\">\n            <input type=\"text\" placeholder='Search by name' value={searchValue} className=\"form-control is-valid search-input\" onChange={handleChange} />\n            <div className=\"valid-feedback\">Type in the name of the coin you want to search</div>\n        </div>\n    )\n};\n\nexport default Search;","import ACTION_TYPES from \"../actions/actions.types\";\n\nconst initialState = {\n    historicalDatas: [],\n    nextCryptoListPage: 1,\n    currentlySelectedCoin: null,\n    currentlySelectedSearchCryptoListValue: '',\n    cryptoList: []\n};\n\nexport default function cryptoDataReducer(_state = initialState, { type, payload }) {\n    switch (type) {\n        case ACTION_TYPES.FETCH_CRYPTO_LIST_DATA:\n            return {\n                ..._state,\n                cryptoList: [..._state.cryptoList, ...payload.cryptoList],\n                isCryptoListLoading: payload.isCryptoListLoading,\n                nextCryptoListPage: payload.nextCryptoListPage\n            };\n        case ACTION_TYPES.SET_SEARCH_CRYPTO_LIST_VALUE:\n            return {\n                ..._state,\n                currentlySelectedSearchCryptoListValue: payload.currentlySelectedSearchCryptoListValue\n            };\n        case ACTION_TYPES.FETCH_CRYPTO_HISTORICAL_DATA:\n            return {\n                ..._state,\n                historicalDatas: [..._state.historicalDatas, payload.historicalData]\n            };\n        case ACTION_TYPES.SET_CURRENTLY_SELECTED_COIN:\n            return {\n                ..._state,\n                currentlySelectedCoin: payload.currentlySelectedCoin\n            }\n        default:\n            return _state;\n    }\n}","import { combineReducers } from \"redux\";\nimport cryptoDataReducer from \"./cryptoDataReducer\";\n\nexport default combineReducers({\n    cryptoDataReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst initialState = {};\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(thunk),\n    )\n);\n\nexport default store;","import React from 'react';\nimport { NavigationBar } from './components';\nimport { Provider } from 'react-redux';\nimport { store } from './redux';\nimport Routes from './routes/Routes';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <NavigationBar />\n      <Routes />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}